version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - /var/lib/rabbitmq
    restart: always

#  mongodb-primary:
#    image: docker.io/bitnami/mongodb:6.0
#    environment:
#      - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
#      - MONGODB_REPLICA_SET_MODE=primary
#      - MONGODB_ROOT_PASSWORD=password123
#      - MONGODB_REPLICA_SET_KEY=replicasetkey123
#    volumes:
#      - 'mongodb_master_data:/bitnami/mongodb'
#    ports:
#      - '27017:27017'
#
#  mongodb-secondary:
#      image: docker.io/bitnami/mongodb:6.0
#      depends_on:
#        - mongodb-primary
#      environment:
#        - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
#        - MONGODB_REPLICA_SET_MODE=secondary
#        - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
#        - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
#        - MONGODB_REPLICA_SET_KEY=replicasetkey123
#
#  mongodb-arbiter:
#      image: docker.io/bitnami/mongodb:6.0
#      depends_on:
#        - mongodb-primary
#      environment:
#        - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
#        - MONGODB_REPLICA_SET_MODE=arbiter
#        - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
#        - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
#        - MONGODB_REPLICA_SET_KEY=replicasetkey123

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - order-app-data:/data/db
#  auth:
#    build:
#      context: .
#      dockerfile: /apps/auth/Dockerfile
#      target: development
#    command: npm run start:dev auth
#    ports:
#      - "3001:3001"
#    volumes:
#      - .:/usr/src/app
#      - /usr/src/app/node_modules
#  billing:
#    build:
#      context: .
#      dockerfile: /apps/billing/Dockerfile
#      target: development
#    command: npm run start:dev billing
#    env_file:
#      - ./apps/billing/.env
#    volumes:
#      - .:/usr/src/app
#      - /usr/src/app/node_modules
#  orders:
#    build:
#      context: .
#      dockerfile: /apps/orders/Dockerfile
#      target: development
#    command: npm run start:dev orders
#    env_file:
#      - ./apps/orders/.env
#    depends_on:
#      - mongo
#    ports:
#      - "3000:3000"
#    volumes:
#      - .:/usr/src/app
#      - /usr/src/app/node_modules

volumes:
  order-app-data:
#  mongodb_master_data:
#    driver: local
